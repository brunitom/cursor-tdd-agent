name: Publish

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (e.g., patch, minor, major)'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major

permissions:
  contents: write

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test:ci

      - name: Run linter
        run: npm run lint

      - name: Check formatting
        run: npm run format:check

      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Bump version (manual trigger)
        if: github.event_name == 'workflow_dispatch'
        run: |
          # Reset to current published version to avoid conflicts
          CURRENT_VERSION=$(npm view cursor-tdd-agent version 2>/dev/null || echo "0.1.0")
          npm version $CURRENT_VERSION --no-git-tag-version --allow-same-version
          # Now bump to next version
          npm version ${{ github.event.inputs.version }} --no-git-tag-version
          VERSION=$(node -p "require('./package.json').version")
          echo "NEW_VERSION=$VERSION" >> $GITHUB_ENV

      - name: Get version (release trigger)
        if: github.event_name == 'release'
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "NEW_VERSION=$VERSION" >> $GITHUB_ENV
          npm version $VERSION --no-git-tag-version --allow-same-version

      - name: Build package
        run: npm pack

      - name: Test package installation
        run: |
          npm install -g ./cursor-tdd-agent-${{ env.NEW_VERSION }}.tgz
          cursor-tdd-agent --version

      - name: Publish to NPM
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release (manual trigger)
        if: github.event_name == 'workflow_dispatch'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.NEW_VERSION }}
          release_name: Release v${{ env.NEW_VERSION }}
          body: |
            ## Changes

            - Automated release via GitHub Actions

            ## Installation

            ```bash
            npm install -g cursor-tdd-agent@${{ env.NEW_VERSION }}
            ```

            ## Usage

            ```bash
            cursor-tdd-agent init
            ```
          draft: false
          prerelease: false
